{"version":3,"sources":["containers/Home/actions.js","components/Home/home.js","components/Home/index.js","containers/Home/home.js","containers/Home/index.js"],"names":["increment","type","INCREMENT","decrement","DECREMENT","reset","RESET","fetchPosts","dispatch","FETCH_POST_PENDING","fetch","then","res","json","error","post","FETCH_POST_SUCCESS","payload","catch","FETCH_POST_ERROR","fetchPostError","ListWrap","styled","ul","List","li","Home","state","value","page","pictures","dataArray","id","like","imgSource","componentDidMount","someFun","onDrop","picture","setState","concat","console","log","name","props","onchangeFun","e","target","submit","postid","ind","updateList","comment","loadMore","this","pending","slidedDataArray","slice","fluid","Helmet","titleTemplate","defaultTitle","content","placeholder","style","padding","height","width","onChange","fileContainerStyle","backgroundColor","withLabel","withIcon","withPreview","buttonText","imgExtension","maxFileSize","Button","onClick","map","index","self","key","src","f","React","Component","connect","counter","home","count","posts","bindActionCreators"],"mappings":"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","file":"static/js/5.b79ccce3.chunk.js","sourcesContent":["import { \r\n  INCREMENT, \r\n  DECREMENT, \r\n  RESET,\r\n  FETCH_POST_PENDING,\r\n  FETCH_POST_SUCCESS,\r\n  FETCH_POST_ERROR\r\n} from './actionTypes';\r\n\r\nexport function increment() {\r\n  return {\r\n    type: INCREMENT,\r\n  };\r\n}\r\n\r\nexport function decrement() {\r\n  return {\r\n    type: DECREMENT,\r\n  };\r\n}\r\n\r\nexport function reset() {\r\n  return { type: RESET };\r\n}\r\n\r\n\r\n/**\r\n * fetchPostPending action function\r\n */\r\nexport function fetchPostPending() {\r\n    return {\r\n        type: FETCH_POST_PENDING\r\n    }\r\n}\r\n\r\n/**\r\n * fetchPostSuccess action function\r\n */\r\nexport function fetchPostSuccess(post) {\r\n    return {\r\n        type: FETCH_POST_SUCCESS,\r\n        payload: post\r\n    }\r\n}\r\n\r\n/**\r\n * fetchPostError action function\r\n */\r\nexport function fetchPostError(error) {\r\n    return {\r\n        type: FETCH_POST_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n/**\r\n * fetchPosts dispatch function\r\n */\r\nexport function fetchPosts() {\r\n    return dispatch => {\r\n        dispatch(fetchPostPending());\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            // console.log('r', res)\r\n            if(res.error) {\r\n                throw(res.error);\r\n            }\r\n            dispatch(fetchPostSuccess(res));\r\n            return res;\r\n            \r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchPostError(error))\r\n        })\r\n    }\r\n}\r\n","/**\r\n * @flow\r\n */\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { KitButton, KitContainer, KitCol, KitRow } from 'kit';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'react-bootstrap';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nconst ListWrap = styled.ul`\r\n  margin:5px 0;\r\n  padding:0;\r\n  list-style:none;\r\n\r\n`;\r\n\r\nconst List = styled.li`\r\n  background:white;\r\n  border:1px solid #d8d8d8;\r\n  padding:10px;\r\n  margin:5px 0;\r\n  border-radius:3px;\r\n`\r\n\r\nclass Home extends React.Component<{}> {\r\n  state = {\r\n    value: '',\r\n    page: 2,\r\n    pictures: [],\r\n    dataArray: [\r\n      {\r\n        id: 1,\r\n        post: 'Title goes here for first post',\r\n        like: 1,\r\n        imgSource: 'http://www.lorempixel.com/100/100'\r\n      },\r\n      {\r\n        id: 2,\r\n        post: 'Title goes here for second post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 3,\r\n        post: 'Title goes here for 3 post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 4,\r\n        post: 'Title goes here for 4 post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 5,\r\n        post: 'Title goes here for 5 post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 6,\r\n        post: 'Title goes here for 6 post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 7,\r\n        post: 'Title goes here for 7 post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 8,\r\n        post: 'Title goes here for 8 post',\r\n        like: 0\r\n      },\r\n      {\r\n        id: 9,\r\n        post: 'Title goes here for 9 post',\r\n        like: 0\r\n      }\r\n    ]\r\n  }\r\n  componentDidMount = () => {\r\n    this.someFun()\r\n  }\r\n\r\n  onDrop = (picture) => {\r\n    \r\n    this.setState({\r\n      pictures: this.state.pictures.concat(picture),\r\n    }, ()=>{\r\n      console.log('sdf',this.state.pictures[0].name)\r\n    });\r\n    \r\n  }\r\n\r\n  someFun = () => {\r\n    this.props.fetchPosts();\r\n  }\r\n\r\n  onchangeFun = (e) => {\r\n    // console.log(e.target.value)\r\n    this.setState({\r\n      value: e.target.value,\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    console.log(this.state.value);\r\n\r\n    this.setState({\r\n      dataArray: [{\r\n        post: this.state.value,\r\n        like: 0,\r\n        imgSource: 'http://placehold.it/100x100'\r\n      }, ...this.state.dataArray],\r\n      value: ''\r\n    })\r\n  }\r\n\r\n  like = (postid, post, ind) => {\r\n    // console.log(postid);\r\n\r\n    // console.log(post, ind);\r\n    // console.log(this.state.dataArray[ind].like + 1)\r\n    // let updatedArray = this.state.dataArray[ind].like + 1;\r\n\r\n    let updateList = this.state.dataArray;\r\n    updateList[ind].like = updateList[ind].like + 1;\r\n\r\n    // updateList\r\n    console.log(updateList, ind);\r\n    this.setState({\r\n      dataArray: updateList\r\n    });\r\n\r\n    // this.state.dataArray.map((i)=>{\r\n\r\n    // })\r\n\r\n    // this.setState({\r\n    //   dataArray:[...this.state.dataArray, ]\r\n    //   // value:''\r\n    // })\r\n  }\r\n\r\n  comment = () => {\r\n    // console.log(this.state.value);\r\n\r\n    // this.setState({\r\n    //   dataArray:[{post:this.state.value}, ...this.state.dataArray],\r\n    //   value:''\r\n    // })\r\n  }\r\n\r\n  loadMore = () => {\r\n    // alert('hi')\r\n    // let moreArray =  this.state.dataArray.slice(2);\r\n    // console.log(moreArray);\r\n    // console.log(this.state.dataArray)\r\n    // this.setState({\r\n    //   dataArray:[...this.state.dataArray, ...moreArray]\r\n    // })\r\n\r\n    this.setState({\r\n      page: this.state.page + 2\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.props.pending) {\r\n      return <div>loading...</div>\r\n    }\r\n\r\n    if (this.props.error) {\r\n      return <div>There is some error please try again later !</div>\r\n    }\r\n\r\n\r\n\r\n    let slidedDataArray = this.state.dataArray.slice(0, this.state.page);\r\n    return (\r\n      <KitContainer fluid>\r\n        <Helmet\r\n          titleTemplate=\"KickStart Template\"\r\n          defaultTitle=\"Home\"\r\n        >\r\n          <meta name=\"description\" content=\"Simple and useful ready to use template\" />\r\n        </Helmet>\r\n\r\n        {/* <KitButton onClick={() => alert('hi')}>primary</KitButton> */}\r\n\r\n        {/* <h1>{this.props.counter}</h1>\r\n\r\n        <KitButton onClick={this.props.increment}>increment</KitButton>\r\n        <KitButton onClick={this.props.decrement}>decrement</KitButton> */}\r\n\r\n\r\n        {/* input compose */}\r\n        <textarea\r\n          type='text'\r\n          placeholder='Post something...'\r\n          value={this.state.value}\r\n          style={{ padding: '10px', height: 100, width: 500 }}\r\n          onChange={(e) => this.onchangeFun(e)} />\r\n\r\n        <ImageUploader\r\n          fileContainerStyle={{\r\n            backgroundColor: 'transparent',\r\n          }}\r\n          withLabel={false}\r\n          withIcon={false}\r\n          withPreview={false}\r\n          buttonText='Choose images'\r\n          onChange={this.onDrop}\r\n          imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n          maxFileSize={5242880}\r\n        />\r\n\r\n        <br></br>\r\n        <Button onClick={() => this.submit()}>Post</Button>\r\n        <hr></hr>\r\n\r\n\r\n        <ListWrap>\r\n          {\r\n\r\n            slidedDataArray.map((post, index) => {\r\n              let self = this;\r\n              return (\r\n                <List key={index}>\r\n                  {post.imgSource &&\r\n                    <img src={post.imgSource} style={{ width: 100, height: 100 }} />\r\n                  }\r\n\r\n                  <p>{post.post}</p>\r\n                  <Button onClick={(f) => self.like(this, post.id, index)}>like {post.like}</Button>\r\n                  {' '}\r\n                  <Button onClick={() => self.comment()}>comment</Button>\r\n                </List>\r\n              )\r\n            })\r\n          }\r\n        </ListWrap>\r\n\r\n        <Button onClick={this.loadMore}>load more</Button>\r\n\r\n        {/* <ListWrap>\r\n          {\r\n            this.props.post.map((post, index) => {\r\n              return (\r\n                <List key={index}>\r\n                  <h2>{post.title}</h2>\r\n                  <p>{post.body}</p>\r\n                </List>\r\n              )\r\n            })\r\n          }\r\n        </ListWrap>  */}\r\n      </KitContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","/**\r\n * @flow\r\n */\r\nimport Home from './home'\r\nexport default Home;\r\n","/**\r\n * @flow\r\n */\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {\r\n  increment,\r\n  decrement,\r\n  reset,\r\n  fetchPosts\r\n} from './actions';\r\n\r\nimport Home from 'components/Home'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    counter: state.home.count,\r\n    error: state.home.posts.error,\r\n    post:state.home.posts.post,\r\n    pending: state.home.posts.pending\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  increment:increment,\r\n  decrement: decrement,\r\n  reset: reset,\r\n  fetchPosts: fetchPosts\r\n}, dispatch)\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","/**\r\n * @flow\r\n */\r\nimport Home from './home'\r\nexport default Home;\r\n"],"sourceRoot":""}